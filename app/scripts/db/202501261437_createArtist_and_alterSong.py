import psycopg2
from psycopg2 import sql

from dotenv import load_dotenv
import os
from config import DB_CONFIG, export_schema_to_file

# .envファイルから環境変数を読み込む
load_dotenv()

# DB_CONFIGをそのまま使用できます

def create_and_alter_tables():
    """アーティストテーブルを作成し、楽曲テーブルを変更する"""
    create_artists_table = """
    CREATE TABLE IF NOT EXISTS artists (
        artist_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  -- アーティストの一意なID
        english_name VARCHAR(255) NOT NULL UNIQUE,                       -- アーティストの英語名
        japanese_name VARCHAR(255),                                      -- アーティストの日本語名
        kana_name VARCHAR(255),                                          -- アーティストのカナ名
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP                   -- レコード作成日時
    );
    """

    alter_songs_table = """
    ALTER TABLE songs
    ADD COLUMN IF NOT EXISTS artist_id INTEGER REFERENCES artists(artist_id);
    """

    try:
        # データベース接続
        conn = psycopg2.connect(**DB_CONFIG)
        cursor = conn.cursor()

        # アーティストテーブル作成
        print("Creating 'artists' table...")
        cursor.execute(create_artists_table)

        # 楽曲テーブル変更
        print("Altering 'songs' table...")
        cursor.execute(alter_songs_table)

        # 変更をコミット
        conn.commit()
        print("Tables processed successfully!")

    except Exception as e:
        print(f"An error occurred: {e}")
    finally:
        # 接続を閉じる
        if cursor:
            cursor.close()
        if conn:
            conn.close()

if __name__ == "__main__":
    create_and_alter_tables()
    # スキーマ情報をエクスポート
    export_schema_to_file()